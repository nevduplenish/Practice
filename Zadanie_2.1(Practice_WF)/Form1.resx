<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAEBAQEBAQEBAQEBAQECAgMCAgICAgQDAwIDBQQFBQUEBAQF
        BgcGBQUHBgQEBgkGBwgICAgIBQYJCgkICgcICAj/2wBDAQEBAQICAgQCAgQIBQQFCAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCACkALsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/90ABAAF/9oADAMBAAIRAxEAPwD+/iiiigAor8vvGf7RPx38Of8ABU74K/szS6v4VHwN
        8QfD7U/EhtYLRheNdQySRjzZXJ4ymQEx2zWl+2N4Q/4KEeMv+Es8Qfsy/G7wB8BvDnh6wa60+2vtJjv5
        fE1yis7i6eQMIrYgIqhNjg7yWIK4AP0vor4k/wCCdP7TXi39sX9iz9nn9pHx14Tt/BXi3xX4bs9Vv7G3
        DCBZpIlZmg3kt5RLEqSTx3NfbdABRRRQAUUUUAf/0P7+KKKKACiiigAooooAKKKKACiiigD/0f7+KKKK
        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
        KKKKACiiigD/0f7+KKKKACiiigD/2Q==
</value>
  </data>
</root>